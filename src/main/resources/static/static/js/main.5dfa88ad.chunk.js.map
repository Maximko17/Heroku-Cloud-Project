{"version":3,"sources":["action/projectActions.js","action/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","action/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProjects.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","action/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/secureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButtn","Fragment","Dashboard","getProjects","projects","CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","startDate","endDate","errors","onSubmit","assertThisInitialized","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","onChange","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProjects","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","project_task_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","PropTypes","func","isRequired","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","boardContent","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","project_id","_this$props$match$par","task_id","getProjectTask","_nextProps$project_ta","update_Project_Task","patchProjectTask","patch","Landing","popTypes","object","Register","username","password","confirmPassword","newUser","createNewUser","Login","loginRequest","login","LoginReauest","decode","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decode_token","current_time","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","secureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5dfa88ad.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (window.confirm(\"Are you shure want to delete this project?\")) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//types for backlog actions\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT\";\n\n//types for security actions\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../action/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButtn = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButtn;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButtn from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../action/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButtn />\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const login = LoginReauest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginReauest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decode = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decode\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../action/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../action/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {}\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); // не дает перезагрузить страницу\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"register\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange.bind(this)}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange.bind(this)}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange.bind(this)}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"startDate\"\n                      value={this.state.startDate}\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"endDate\"\n                      value={this.state.endDate}\n                      onChange={this.onChange.bind(this)}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import { GET_ERRORS } from \"../action/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../action/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return { ...state, projects: action.payload };\n\n    case GET_PROJECT:\n      return { ...state, project: action.payload };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../action/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence != action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../action/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../action/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProjects extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    disabled\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"startDate\"\n                    value={this.state.startDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"endDate\"\n                    value={this.state.endDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjects.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProjects);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../action/backlogActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, project_task_id) {\n    this.props.deleteProjectTask(backlog_id, project_task_id);\n  }\n  render() {\n    const { project_task } = this.props;\n\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/projectBoard/${\n              project_task.projectIdentifier\n            }/updateProjectTask/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nProjectTask.PropTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  project_task_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(\n      `/api/backlog/${backlog_id}/${project_task_id}`\n    );\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const patchProjectTask = (\n  backlog_id,\n  project_task_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.patch(\n      `/api/backlog/${backlog_id}/${project_task_id}`,\n      project_task\n    );\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (\n  backlog_id,\n  project_task_id\n) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${project_task_id} form project ${backlog_id}. Do you really want to do this`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${project_task_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: project_task_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status == \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status == \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status == \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../action/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let boardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"start\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    boardContent = boardAlgorithm(errors, project_tasks);\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {boardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../action/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  patchProjectTask,\n  getProjectTask\n} from \"../../../action/backlogActions\";\n\nclass UpdateProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { project_id } = this.props.match.params;\n\n    this.state = {\n      id: \"\",\n      summary: \"\",\n      projectSequence: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: project_id,\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  componentDidMount() {\n    const { task_id, project_id } = this.props.match.params;\n    this.props.getProjectTask(project_id, task_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      summary,\n      projectSequence,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      summary,\n      projectSequence,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const update_Project_Task = {\n      id: this.state.id,\n      summary: this.state.summary,\n      projectSequence: this.state.projectSequence,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier\n    };\n\n    this.props.patchProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      update_Project_Task,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { project_id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${project_id}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Code:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  project_task: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  getProjectTask: PropTypes.func.isRequired,\n  patchProjectTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, patchProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Managment Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start you own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.popTypes = {\n  security: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createNewUser } from \"../../action/securityActions\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  errors: PropTypes.object.isRequired,\n  createNewUser: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../action/securityActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); // не дает перезагрузить страницу\n    const loginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    this.props.login(loginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToprops = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToprops,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecureRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecureRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecureRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProjects from \"./components/Project/UpdateProjects\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./action/types\";\nimport { logout } from \"./action/securityActions\";\nimport SecureRoute from \"./securityUtils/secureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decode_token = jwt_decode(jwtToken);\n\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decode_token\n  });\n\n  const current_time = Date.now() / 1000;\n  if (decode_token.exp < current_time) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              //private Routes\n            }\n            <Switch>\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecureRoute exact path=\"/addProject\" component={AddProject} />\n              <SecureRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProjects}\n              />\n              <SecureRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecureRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecureRoute\n                exact\n                path=\"/projectBoard/:project_id/updateProjectTask/:task_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}